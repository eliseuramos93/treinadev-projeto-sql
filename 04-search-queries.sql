-- tarefa 14
SELECT NAME, LASTNAME, EMAIL
FROM CUSTOMERS
WHERE STATE = 'SP';

-- tarefa 15
SELECT *
FROM CARS
WHERE STATUS = 'Liberado';

-- tarefa 16
SELECT *
FROM CARS
WHERE YEAR = 2016;

-- tarefa 17
SELECT  E.NAME,
        E.PHONE_NUMBER,
        E.CONTRACT_DATE,
        P.DESCRIPTION
FROM EMPLOYEES E
LEFT JOIN POSITIONS P ON (P.ID = E.POSITION_ID);

-- tarefa 18
SELECT E.NAME, COUNT(1) AS 'LOCATIONS'
FROM LOCATIONS L
LEFT JOIN EMPLOYEES E ON (E.ID = L.EMPLOYEE_ID)
GROUP BY E.NAME
HAVING COUNT(1) >= 2;

-- tarefa 19
SELECT  C.NAME AS CUSTOMER_NAME, 
        COUNT(1) AS 'LOCATIONS'
FROM LOCATIONS L 
LEFT JOIN CUSTOMERS C ON (C.ID = L.CUSTOMER_ID)
GROUP BY C.NAME
HAVING COUNT(1) >= 2;

-- tarefa 20
SELECT  L.ID AS RENTAL_ID,
        C.NAME AS CUSTOMER,
        CARS.NAME AS CAR,
        E.NAME AS EMPLOYEE
FROM LOCATIONS L
LEFT JOIN CUSTOMERS C ON (C.ID = L.CUSTOMER_ID)
LEFT JOIN CARS ON (CARS.ID = L.CAR_ID)
LEFT JOIN EMPLOYEES E ON (E.ID = L.EMPLOYEE_ID);

-- tarefa 21
SELECT COUNT(1) AS RENTALS_COUNT
FROM LOCATIONS;

-- tarefa 22
SELECT MAX(TOTAL) AS MAXIMUM_PRICE
FROM LOCATIONS;

-- tarefa 23
SELECT  L.ID AS RENTAL_ID,
        L.START_DATE,
        L.END_DATE,
        L.TOTAL,
        C.NAME AS CUSTOMER_NAME,
        CARS.NAME AS RENTED_CAR,
        E.NAME AS EMPLOYEE_NAME
FROM LOCATIONS L
LEFT JOIN CUSTOMERS C ON (C.ID = L.CUSTOMER_ID)
LEFT JOIN CARS ON (CARS.ID = L.CAR_ID)
LEFT JOIN EMPLOYEES E ON (E.ID = L.EMPLOYEE_ID)
WHERE START_DATE BETWEEN '2022-05-20' AND '2022-12-25' OR
      END_DATE BETWEEN '2022-05-20' AND '2022-12-25';